function [est_X, est_bit_seq] = detect_PSK_16(Y)

 % Symbols of 
    symbols = exp(1i*(0:15)*pi/8);
    bits = [0 0 0 0; 0 0 0 1; 0 0 1 1; 0 0 1 0; 0 1 1 0; 0 1 1 1; 0 1 0 1; 0 1 0 0;
             1 1 0 0; 1 1 0 1; 1 1 1 1; 1 1 1 0; 1 0 1 0; 1 0 1 1; 1 0 0 1; 1 0 0 0];

    % Αρχικοποίηση των μεταβλητών εκτίμησης
    estX = zeros(1, length(Y));
    estBitSeq = zeros(4, length(Y));

    % Εκτίμηση συμβόλου-προς-σύμβολο
    for i = 1:length(Y)
        distances = abs(Y(i) - symbols);
        [~, index] = min(distances);
        estX(i) = symbols(index);
    end

    % Αντίστροφη απεικόνιση Gray για τον υπολογισμό της εκτιμώμενης δυαδικής ακολουθίας
    for i = 1:length(Y)
        [~, index] = ismember(estX(i), symbols);
        estBitSeq(:, i) = bits(index, :);
    end
end
Η παραπάνω συνάρτηση detect_PSK16 χρησιμοποιεί τον κανόνα εγγύτερου γείτονα για την εκτίμηση της ακολουθίας 16-PSK συμβόλων από τα παρατηρούμενα σήματα Y. Στη συνέχεια, εφαρμόζει την αντίστροφη απεικόνιση Gray για τον υπολογισμό της εκτιμώμενης δυαδικής ακολουθίας εισόδου estBitSeq.





User
τι είναι ο κανόνας εγγύτερου γείτονα;
ChatGPT
Ο κανόνας εγγύτερου γείτονα είναι ένας απλός αλγόριθμος απόφασης που βασίζεται στην επιλογή του πλησιέστερου γείτονα ενός παρατηρούμενου σήματος ή δείγματος από ένα σύνολο δυνατών σημάτων ή συμβόλων.

Στην περίπτωση της συνάρτησης detect_PSK16 που παρέθεσα προηγουμένως, ο κανόνας εγγύτερου γείτονα χρησιμοποιείται για να εκτιμήσει το κοντινότερο σύμβολο του 16-PSK που αντιστοιχεί σε κάθε παρατηρούμενο σύμβολο του σήματος Y. Υπολογίζεται η απόσταση του παρατηρούμενου συμβόλου από κάθε ένα από τα δυνατά σύμβολα του 16-PSK, και το σύμβολο με τη μικρότερη απόσταση θεωρείται η εκτίμηση του αρχικού συμβόλου.

Αυτός ο απλός αλγόριθμος είναι βολικός για συστήματα με απλή και γνωστή δομή σημάτων, όπως στην περίπτωση της 16-PSK.






